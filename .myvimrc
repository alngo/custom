" Global
syntax on
filetype plugin indent on
setglobal mouse=a
setglobal autoread
setglobal autowrite
setglobal smartcase
setglobal incsearch
setglobal nocompatible
setglobal path=.,,
setglobal tags=./tags
setglobal encoding=utf-8
setglobal fileencoding=utf-8
if exists('+macmeta')
	setglobal macmeta
endif
setglobal winaltkeys=no

" Display
setglobal lazyredraw
setglobal display=lastline
setglobal scrolloff=2
setglobal cmdheight=2
set number

" Cursor shape
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Editing
setglobal textwidth=78
setglobal backspace=2
setglobal complete-=i
setglobal dictionary+=/usr/share/dict/words
setglobal infercase
setglobal showmatch
setglobal virtualedit=block
setglobal shiftround
setglobal autoindent
setglobal omnifunc=syntaxcomplete#Complete
setglobal completefunc=syntaxcomplete#Complete

" Folding - Comment
if has('folding')
	setglobal foldmethod=marker
	setglobal foldopen+=jump
endif
setglobal commentstring=#\ %s
if !get(v:, 'vim_did_enter', !has('vim_starting'))
	setlocal commentstring<
endif
autocmd FileType c,cpp,cs,java,js        setlocal commentstring=//\ %s

" Information
setglobal confirm
setglobal showcmd
setglobal visualbell

" Mapping
nnoremap Y y
inoremap <C-C> <Esc>`^
inoremap <M-o>      <C-O>o
inoremap <M-O>      <C-O>O
inoremap <M-I>      <C-O>^
inoremap <M-A>      <C-O>$

" Wildmenu
setglobal history=200
setglobal wildmenu
setglobal wildmode=full
setglobal wildignore+=tags,.*pyc,*.o

" Function
func! DeleteTrailingWS()
	exe "normal mz"
	%s/\s\+$//ge
	exe "normal `z"
endfunc
autocmd BufWrite *.c :call DeleteTrailingWS()
autocmd BufWrite *.h :call DeleteTrailingWS()
autocmd BufWrite *.js :call DeleteTrailingWS()
let g:highlighting = 0
function! Highlighting()
	if g:highlighting == 1 && @/ =~ '^\\<'.expand('<cword>').'\\>$'
		let g:highlighting = 0
		return ":silent nohlsearch\<CR>"
	endif
	let @/ = '\<'.expand('<cword>').'\>'
	let g:highlighting = 1
	return ":silent set hlsearch\<CR>"
endfunction
nnoremap <silent> <expr> <CR> Highlighting()
" Search with *
vnoremap <silent> * :<C-U>
	\let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
	\gvy/<C-R><C-R>=substitute(
	\escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
	\gV:call setreg('"', old_reg, old_regtype)<CR>

" Plug
call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-vinegar'
Plug 'vim-scripts/taglist.vim'
Plug 'ludovicchabant/vim-gutentags'
call plug#end()
